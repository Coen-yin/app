{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AuthContext = createContext();\nexport var useAuth = function useAuth() {\n  var context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\nvar hashPassword = function hashPassword(password) {\n  var hash = 0;\n  if (password.length === 0) return hash;\n  for (var i = 0; i < password.length; i++) {\n    var char = password.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash;\n  }\n  return Math.abs(hash).toString();\n};\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentUser = _useState2[0],\n    setCurrentUser = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  useEffect(function () {\n    initializeAuth();\n    initializeAdmin();\n  }, []);\n  var initializeAuth = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var userData = yield AsyncStorage.getItem('talkie-user');\n        if (userData) {\n          setCurrentUser(JSON.parse(userData));\n        }\n      } catch (error) {\n        console.log('Error loading user data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function initializeAuth() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var initializeAdmin = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var usersData = yield AsyncStorage.getItem('talkie-users');\n        var users = usersData ? JSON.parse(usersData) : {};\n        var adminEmail = 'coenyin9@gmail.com';\n        if (!users[adminEmail]) {\n          var hashedPassword = hashPassword('Carronshore93');\n          users[adminEmail] = {\n            name: 'Coen Admin',\n            email: adminEmail,\n            password: hashedPassword,\n            createdAt: new Date().toISOString(),\n            isPro: true,\n            isAdmin: true,\n            profilePhoto: null\n          };\n          yield AsyncStorage.setItem('talkie-users', JSON.stringify(users));\n          console.log('Admin account created successfully');\n        } else {\n          if (!users[adminEmail].isAdmin) {\n            users[adminEmail].isAdmin = true;\n            users[adminEmail].isPro = true;\n            yield AsyncStorage.setItem('talkie-users', JSON.stringify(users));\n            console.log('Admin account permissions updated');\n          }\n        }\n      } catch (error) {\n        console.error('Error initializing admin account:', error);\n      }\n    });\n    return function initializeAdmin() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var login = function () {\n    var _ref4 = _asyncToGenerator(function* (email, password) {\n      try {\n        var usersData = yield AsyncStorage.getItem('talkie-users');\n        var users = usersData ? JSON.parse(usersData) : {};\n        var user = users[email];\n        if (!user) {\n          Alert.alert('Login Failed', 'No account found with this email.');\n          return false;\n        }\n        var hashedPassword = hashPassword(password);\n        if (user.password !== hashedPassword) {\n          Alert.alert('Login Failed', 'Incorrect password.');\n          return false;\n        }\n        var userData = {\n          name: user.name,\n          email: user.email,\n          isPro: user.isPro || false,\n          isAdmin: user.isAdmin || false,\n          profilePhoto: user.profilePhoto || null\n        };\n        setCurrentUser(userData);\n        yield AsyncStorage.setItem('talkie-user', JSON.stringify(userData));\n        Alert.alert(\"Welcome back!\", `Good to see you, ${user.name}`);\n        return true;\n      } catch (error) {\n        console.error('Login error:', error);\n        Alert.alert(\"Login Error\", \"An error occurred during login.\");\n        return false;\n      }\n    });\n    return function login(_x, _x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var signup = function () {\n    var _ref5 = _asyncToGenerator(function* (name, email, password) {\n      try {\n        if (!name || !email || !password) {\n          Alert.alert(\"Signup Failed\", \"Please fill in all fields.\");\n          return false;\n        }\n        if (password.length < 6) {\n          Alert.alert(\"Signup Failed\", \"Password must be at least 6 characters.\");\n          return false;\n        }\n        var usersData = yield AsyncStorage.getItem('talkie-users');\n        var users = usersData ? JSON.parse(usersData) : {};\n        if (users[email]) {\n          Alert.alert(\"Signup Failed\", \"An account with this email already exists.\");\n          return false;\n        }\n        var hashedPassword = hashPassword(password);\n        var newUser = {\n          name: name,\n          email: email,\n          password: hashedPassword,\n          createdAt: new Date().toISOString(),\n          isPro: false,\n          isAdmin: false,\n          profilePhoto: null\n        };\n        users[email] = newUser;\n        yield AsyncStorage.setItem('talkie-users', JSON.stringify(users));\n        var userData = {\n          name: name,\n          email: email,\n          isPro: false,\n          isAdmin: false,\n          profilePhoto: null\n        };\n        setCurrentUser(userData);\n        yield AsyncStorage.setItem('talkie-user', JSON.stringify(userData));\n        Alert.alert(\"Welcome to Talkie Gen AI!\", `Account created successfully, ${name}`);\n        return true;\n      } catch (error) {\n        console.error('Signup error:', error);\n        Alert.alert(\"Signup Error\", \"An error occurred during signup.\");\n        return false;\n      }\n    });\n    return function signup(_x3, _x4, _x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var logout = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      try {\n        setCurrentUser(null);\n        yield AsyncStorage.removeItem('talkie-user');\n        Alert.alert(\"Signed Out\", \"You have been signed out successfully.\");\n      } catch (error) {\n        console.error('Logout error:', error);\n      }\n    });\n    return function logout() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var updateProfile = function () {\n    var _ref7 = _asyncToGenerator(function* (updates) {\n      try {\n        var updatedUser = _objectSpread(_objectSpread({}, currentUser), updates);\n        setCurrentUser(updatedUser);\n        yield AsyncStorage.setItem('talkie-user', JSON.stringify(updatedUser));\n        var usersData = yield AsyncStorage.getItem('talkie-users');\n        var users = usersData ? JSON.parse(usersData) : {};\n        if (users[currentUser.email]) {\n          users[currentUser.email] = _objectSpread(_objectSpread({}, users[currentUser.email]), updates);\n          yield AsyncStorage.setItem('talkie-users', JSON.stringify(users));\n        }\n        Alert.alert(\"Profile Updated\", \"Your profile has been updated successfully.\");\n        return true;\n      } catch (error) {\n        console.error('Profile update error:', error);\n        Alert.alert(\"Update Failed\", \"Failed to update profile.\");\n        return false;\n      }\n    });\n    return function updateProfile(_x6) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var upgradeToPro = function () {\n    var _ref8 = _asyncToGenerator(function* () {\n      if (!currentUser) return false;\n      try {\n        var updates = {\n          isPro: true,\n          proUpgradeDate: new Date().toISOString()\n        };\n        yield updateProfile(updates);\n        Alert.alert(\"ðŸŽ‰ Welcome to Talkie Gen Pro!\", \"You now have access to exclusive features.\");\n        return true;\n      } catch (error) {\n        console.error('Pro upgrade error:', error);\n        return false;\n      }\n    });\n    return function upgradeToPro() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var value = {\n    currentUser: currentUser,\n    isLoading: isLoading,\n    login: login,\n    signup: signup,\n    logout: logout,\n    updateProfile: updateProfile,\n    upgradeToPro: upgradeToPro\n  };\n  return _jsx(AuthContext.Provider, {\n    value: value,\n    children: children\n  });\n};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","AsyncStorage","Alert","jsx","_jsx","AuthContext","useAuth","context","Error","hashPassword","password","hash","length","i","char","charCodeAt","Math","abs","toString","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","currentUser","setCurrentUser","_useState3","_useState4","isLoading","setIsLoading","initializeAuth","initializeAdmin","_ref2","_asyncToGenerator","userData","getItem","JSON","parse","error","console","log","apply","arguments","_ref3","usersData","users","adminEmail","hashedPassword","name","email","createdAt","Date","toISOString","isPro","isAdmin","profilePhoto","setItem","stringify","login","_ref4","user","alert","_x","_x2","signup","_ref5","newUser","_x3","_x4","_x5","logout","_ref6","removeItem","updateProfile","_ref7","updates","updatedUser","_objectSpread","_x6","upgradeToPro","_ref8","proUpgradeDate","value","Provider"],"sources":["/home/runner/work/app/app/src/context/AuthContext.js"],"sourcesContent":["import React, {createContext, useContext, useState, useEffect} from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {Alert} from 'react-native';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Simple hash function for demo purposes - NOT secure for production\nconst hashPassword = (password) => {\n  let hash = 0;\n  if (password.length === 0) return hash;\n  for (let i = 0; i < password.length; i++) {\n    const char = password.charCodeAt(i);\n    hash = ((hash << 5) - hash) + char;\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return Math.abs(hash).toString();\n};\n\nexport const AuthProvider = ({children}) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    initializeAuth();\n    initializeAdmin();\n  }, []);\n\n  const initializeAuth = async () => {\n    try {\n      const userData = await AsyncStorage.getItem('talkie-user');\n      if (userData) {\n        setCurrentUser(JSON.parse(userData));\n      }\n    } catch (error) {\n      console.log('Error loading user data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const initializeAdmin = async () => {\n    try {\n      const usersData = await AsyncStorage.getItem('talkie-users');\n      const users = usersData ? JSON.parse(usersData) : {};\n      const adminEmail = 'coenyin9@gmail.com';\n\n      // Always ensure admin account exists with correct properties\n      if (!users[adminEmail]) {\n        const hashedPassword = hashPassword('Carronshore93');\n        users[adminEmail] = {\n          name: 'Coen Admin',\n          email: adminEmail,\n          password: hashedPassword,\n          createdAt: new Date().toISOString(),\n          isPro: true,\n          isAdmin: true,\n          profilePhoto: null,\n        };\n        await AsyncStorage.setItem('talkie-users', JSON.stringify(users));\n        console.log('Admin account created successfully');\n      } else {\n        // Ensure existing admin account has all required properties\n        if (!users[adminEmail].isAdmin) {\n          users[adminEmail].isAdmin = true;\n          users[adminEmail].isPro = true;\n          await AsyncStorage.setItem('talkie-users', JSON.stringify(users));\n          console.log('Admin account permissions updated');\n        }\n      }\n    } catch (error) {\n      console.error('Error initializing admin account:', error);\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      const usersData = await AsyncStorage.getItem('talkie-users');\n      const users = usersData ? JSON.parse(usersData) : {};\n      const user = users[email];\n\n      if (!user) {\n        Alert.alert('Login Failed', 'No account found with this email.');\n        return false;\n      }\n\n      const hashedPassword = hashPassword(password);\n      if (user.password !== hashedPassword) {\n        Alert.alert('Login Failed', 'Incorrect password.');\n        return false;\n      }\n\n      // Log in the user\n      const userData = {\n        name: user.name,\n        email: user.email,\n        isPro: user.isPro || false,\n        isAdmin: user.isAdmin || false,\n        profilePhoto: user.profilePhoto || null,\n      };\n\n      setCurrentUser(userData);\n      await AsyncStorage.setItem('talkie-user', JSON.stringify(userData));\n\n      Alert.alert(\n        \"Welcome back!\",\n        `Good to see you, ${user.name}`\n      );\n\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      Alert.alert(\n        \"Login Error\",\n        \"An error occurred during login.\"\n      );\n      return false;\n    }\n  };\n\n  const signup = async (name, email, password) => {\n    try {\n      // Validation\n      if (!name || !email || !password) {\n        Alert.alert(\n          \"Signup Failed\",\n          \"Please fill in all fields.\"\n        );\n        return false;\n      }\n\n      if (password.length < 6) {\n        Alert.alert(\n          \"Signup Failed\",\n          \"Password must be at least 6 characters.\"\n        );\n        return false;\n      }\n\n      // Check if user already exists\n      const usersData = await AsyncStorage.getItem('talkie-users');\n      const users = usersData ? JSON.parse(usersData) : {};\n\n      if (users[email]) {\n        Alert.alert(\n          \"Signup Failed\",\n          \"An account with this email already exists.\"\n        );\n        return false;\n      }\n\n      // Create new user\n      const hashedPassword = hashPassword(password);\n      const newUser = {\n        name,\n        email,\n        password: hashedPassword,\n        createdAt: new Date().toISOString(),\n        isPro: false,\n        isAdmin: false,\n        profilePhoto: null,\n      };\n\n      // Save user\n      users[email] = newUser;\n      await AsyncStorage.setItem('talkie-users', JSON.stringify(users));\n\n      // Log in the user\n      const userData = {\n        name,\n        email,\n        isPro: false,\n        isAdmin: false,\n        profilePhoto: null,\n      };\n\n      setCurrentUser(userData);\n      await AsyncStorage.setItem('talkie-user', JSON.stringify(userData));\n\n      Alert.alert(\n        \"Welcome to Talkie Gen AI!\",\n        `Account created successfully, ${name}`\n      );\n\n      return true;\n    } catch (error) {\n      console.error('Signup error:', error);\n      Alert.alert(\n        \"Signup Error\",\n        \"An error occurred during signup.\"\n      );\n      return false;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      setCurrentUser(null);\n      await AsyncStorage.removeItem('talkie-user');\n      Alert.alert(\n        \"Signed Out\",\n        \"You have been signed out successfully.\"\n      );\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n\n  const updateProfile = async (updates) => {\n    try {\n      const updatedUser = {...currentUser, ...updates};\n      \n      // Update local state\n      setCurrentUser(updatedUser);\n      await AsyncStorage.setItem('talkie-user', JSON.stringify(updatedUser));\n\n      // Update in users database\n      const usersData = await AsyncStorage.getItem('talkie-users');\n      const users = usersData ? JSON.parse(usersData) : {};\n      \n      if (users[currentUser.email]) {\n        users[currentUser.email] = {...users[currentUser.email], ...updates};\n        await AsyncStorage.setItem('talkie-users', JSON.stringify(users));\n      }\n\n      Alert.alert(\n        \"Profile Updated\",\n        \"Your profile has been updated successfully.\"\n      );\n\n      return true;\n    } catch (error) {\n      console.error('Profile update error:', error);\n      Alert.alert(\n        \"Update Failed\",\n        \"Failed to update profile.\"\n      );\n      return false;\n    }\n  };\n\n  const upgradeToPro = async () => {\n    if (!currentUser) return false;\n\n    try {\n      const updates = {\n        isPro: true,\n        proUpgradeDate: new Date().toISOString(),\n      };\n\n      await updateProfile(updates);\n\n      Alert.alert(\n        \"ðŸŽ‰ Welcome to Talkie Gen Pro!\",\n        \"You now have access to exclusive features.\"\n      );\n\n      return true;\n    } catch (error) {\n      console.error('Pro upgrade error:', error);\n      return false;\n    }\n  };\n\n  const value = {\n    currentUser,\n    isLoading,\n    login,\n    signup,\n    logout,\n    updateProfile,\n    upgradeToPro,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}