{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Feather } from '@expo/vector-icons';\nimport { useTheme } from \"../context/ThemeContext\";\nimport { useChat } from \"../context/ChatContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SettingsScreen = function SettingsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  var _useChat = useChat(),\n    conversationSettings = _useChat.conversationSettings,\n    updateConversationSettings = _useChat.updateConversationSettings,\n    clearUserMemory = _useChat.clearUserMemory;\n  var settingsSections = [{\n    title: 'Context & Memory',\n    items: [{\n      label: 'Context Length',\n      value: `${conversationSettings.contextLength} messages`,\n      type: 'select'\n    }, {\n      label: 'Memory Across Sessions',\n      value: conversationSettings.enableMemory,\n      type: 'toggle'\n    }]\n  }, {\n    title: 'Response Style',\n    items: [{\n      label: 'Response Style',\n      value: conversationSettings.responseStyle,\n      type: 'select'\n    }, {\n      label: 'AI Personality',\n      value: conversationSettings.personalityMode,\n      type: 'select'\n    }]\n  }, {\n    title: 'Conversation Features',\n    items: [{\n      label: 'Show Follow-up Questions',\n      value: conversationSettings.enableFollowUps,\n      type: 'toggle'\n    }, {\n      label: 'Remember User Preferences',\n      value: conversationSettings.rememberPreferences,\n      type: 'toggle'\n    }]\n  }];\n  var renderSettingItem = function renderSettingItem(item) {\n    return _jsxs(TouchableOpacity, {\n      style: [styles.settingItem, {\n        borderBottomColor: theme.borderLight\n      }],\n      children: [_jsxs(View, {\n        style: styles.settingInfo,\n        children: [_jsx(Text, {\n          style: [styles.settingLabel, {\n            color: theme.textPrimary\n          }],\n          children: item.label\n        }), _jsx(Text, {\n          style: [styles.settingValue, {\n            color: theme.textSecondary\n          }],\n          children: typeof item.value === 'boolean' ? item.value ? 'Enabled' : 'Disabled' : item.value\n        })]\n      }), _jsx(Feather, {\n        name: \"chevron-right\",\n        size: 16,\n        color: theme.textTertiary\n      })]\n    }, item.label);\n  };\n  var renderSection = function renderSection(section) {\n    return _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: [styles.sectionTitle, {\n          color: theme.textPrimary\n        }],\n        children: section.title\n      }), _jsx(View, {\n        style: [styles.sectionContent, {\n          backgroundColor: theme.bgPrimary,\n          borderColor: theme.borderLight\n        }],\n        children: section.items.map(renderSettingItem)\n      })]\n    }, section.title);\n  };\n  return _jsx(SafeAreaView, {\n    style: [styles.container, {\n      backgroundColor: theme.bgSecondary\n    }],\n    children: _jsxs(ScrollView, {\n      style: styles.scrollView,\n      contentContainerStyle: styles.scrollContent,\n      showsVerticalScrollIndicator: false,\n      children: [settingsSections.map(renderSection), _jsxs(View, {\n        style: styles.section,\n        children: [_jsx(Text, {\n          style: [styles.sectionTitle, {\n            color: theme.textPrimary\n          }],\n          children: \"Memory Management\"\n        }), _jsx(View, {\n          style: [styles.sectionContent, {\n            backgroundColor: theme.bgPrimary,\n            borderColor: theme.borderLight\n          }],\n          children: _jsxs(TouchableOpacity, {\n            style: [styles.actionButton, {\n              backgroundColor: theme.danger\n            }],\n            onPress: clearUserMemory,\n            children: [_jsx(Feather, {\n              name: \"trash-2\",\n              size: 16,\n              color: \"white\"\n            }), _jsx(Text, {\n              style: styles.actionButtonText,\n              children: \"Clear Memory\"\n            })]\n          })\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  scrollView: {\n    flex: 1\n  },\n  scrollContent: {\n    padding: 16\n  },\n  section: {\n    marginBottom: 24\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: '700',\n    marginBottom: 12\n  },\n  sectionContent: {\n    borderRadius: 12,\n    borderWidth: 1,\n    overflow: 'hidden'\n  },\n  settingItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: 16,\n    paddingVertical: 14,\n    borderBottomWidth: 1\n  },\n  settingInfo: {\n    flex: 1\n  },\n  settingLabel: {\n    fontSize: 14,\n    fontWeight: '600',\n    marginBottom: 2\n  },\n  settingValue: {\n    fontSize: 12,\n    textTransform: 'capitalize'\n  },\n  actionButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 16,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    gap: 8\n  },\n  actionButtonText: {\n    color: 'white',\n    fontSize: 14,\n    fontWeight: '600'\n  }\n});\nexport default SettingsScreen;","map":{"version":3,"names":["React","View","Text","StyleSheet","SafeAreaView","ScrollView","TouchableOpacity","Feather","useTheme","useChat","jsx","_jsx","jsxs","_jsxs","SettingsScreen","_ref","navigation","_useTheme","theme","_useChat","conversationSettings","updateConversationSettings","clearUserMemory","settingsSections","title","items","label","value","contextLength","type","enableMemory","responseStyle","personalityMode","enableFollowUps","rememberPreferences","renderSettingItem","item","style","styles","settingItem","borderBottomColor","borderLight","children","settingInfo","settingLabel","color","textPrimary","settingValue","textSecondary","name","size","textTertiary","renderSection","section","sectionTitle","sectionContent","backgroundColor","bgPrimary","borderColor","map","container","bgSecondary","scrollView","contentContainerStyle","scrollContent","showsVerticalScrollIndicator","actionButton","danger","onPress","actionButtonText","create","flex","padding","marginBottom","fontSize","fontWeight","borderRadius","borderWidth","overflow","flexDirection","alignItems","justifyContent","paddingHorizontal","paddingVertical","borderBottomWidth","textTransform","margin","gap"],"sources":["/home/runner/work/app/app/src/screens/SettingsScreen.js"],"sourcesContent":["import React from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  SafeAreaView,\n  ScrollView,\n  TouchableOpacity,\n} from 'react-native';\nimport {Feather} from '@expo/vector-icons';\n\nimport {useTheme} from '../context/ThemeContext';\nimport {useChat} from '../context/ChatContext';\n\nconst SettingsScreen = ({navigation}) => {\n  const {theme} = useTheme();\n  const {conversationSettings, updateConversationSettings, clearUserMemory} = useChat();\n\n  const settingsSections = [\n    {\n      title: 'Context & Memory',\n      items: [\n        {\n          label: 'Context Length',\n          value: `${conversationSettings.contextLength} messages`,\n          type: 'select',\n        },\n        {\n          label: 'Memory Across Sessions',\n          value: conversationSettings.enableMemory,\n          type: 'toggle',\n        },\n      ],\n    },\n    {\n      title: 'Response Style',\n      items: [\n        {\n          label: 'Response Style',\n          value: conversationSettings.responseStyle,\n          type: 'select',\n        },\n        {\n          label: 'AI Personality',\n          value: conversationSettings.personalityMode,\n          type: 'select',\n        },\n      ],\n    },\n    {\n      title: 'Conversation Features',\n      items: [\n        {\n          label: 'Show Follow-up Questions',\n          value: conversationSettings.enableFollowUps,\n          type: 'toggle',\n        },\n        {\n          label: 'Remember User Preferences',\n          value: conversationSettings.rememberPreferences,\n          type: 'toggle',\n        },\n      ],\n    },\n  ];\n\n  const renderSettingItem = (item) => (\n    <TouchableOpacity\n      key={item.label}\n      style={[styles.settingItem, {borderBottomColor: theme.borderLight}]}>\n      <View style={styles.settingInfo}>\n        <Text style={[styles.settingLabel, {color: theme.textPrimary}]}>\n          {item.label}\n        </Text>\n        <Text style={[styles.settingValue, {color: theme.textSecondary}]}>\n          {typeof item.value === 'boolean' ? (item.value ? 'Enabled' : 'Disabled') : item.value}\n        </Text>\n      </View>\n      <Feather name=\"chevron-right\" size={16} color={theme.textTertiary} />\n    </TouchableOpacity>\n  );\n\n  const renderSection = (section) => (\n    <View key={section.title} style={styles.section}>\n      <Text style={[styles.sectionTitle, {color: theme.textPrimary}]}>\n        {section.title}\n      </Text>\n      <View style={[styles.sectionContent, {backgroundColor: theme.bgPrimary, borderColor: theme.borderLight}]}>\n        {section.items.map(renderSettingItem)}\n      </View>\n    </View>\n  );\n\n  return (\n    <SafeAreaView style={[styles.container, {backgroundColor: theme.bgSecondary}]}>\n      <ScrollView\n        style={styles.scrollView}\n        contentContainerStyle={styles.scrollContent}\n        showsVerticalScrollIndicator={false}>\n        \n        {settingsSections.map(renderSection)}\n\n        {/* Memory Management */}\n        <View style={styles.section}>\n          <Text style={[styles.sectionTitle, {color: theme.textPrimary}]}>\n            Memory Management\n          </Text>\n          <View style={[styles.sectionContent, {backgroundColor: theme.bgPrimary, borderColor: theme.borderLight}]}>\n            <TouchableOpacity\n              style={[styles.actionButton, {backgroundColor: theme.danger}]}\n              onPress={clearUserMemory}>\n              <Feather name=\"trash-2\" size={16} color=\"white\" />\n              <Text style={styles.actionButtonText}>Clear Memory</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  scrollContent: {\n    padding: 16,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: '700',\n    marginBottom: 12,\n  },\n  sectionContent: {\n    borderRadius: 12,\n    borderWidth: 1,\n    overflow: 'hidden',\n  },\n  settingItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: 16,\n    paddingVertical: 14,\n    borderBottomWidth: 1,\n  },\n  settingInfo: {\n    flex: 1,\n  },\n  settingLabel: {\n    fontSize: 14,\n    fontWeight: '600',\n    marginBottom: 2,\n  },\n  settingValue: {\n    fontSize: 12,\n    textTransform: 'capitalize',\n  },\n  actionButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 16,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    gap: 8,\n  },\n  actionButtonText: {\n    color: 'white',\n    fontSize: 14,\n    fontWeight: '600',\n  },\n});\n\nexport default SettingsScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}