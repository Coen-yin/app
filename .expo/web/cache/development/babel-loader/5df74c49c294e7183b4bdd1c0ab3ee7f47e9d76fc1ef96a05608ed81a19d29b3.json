{"ast":null,"code":"import React, { useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { useTheme } from \"../context/ThemeContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TypingIndicator = function TypingIndicator() {\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  var dot1Anim = useRef(new Animated.Value(0.4)).current;\n  var dot2Anim = useRef(new Animated.Value(0.4)).current;\n  var dot3Anim = useRef(new Animated.Value(0.4)).current;\n  useEffect(function () {\n    var animateDots = function animateDots() {\n      var createAnimation = function createAnimation(animValue, delay) {\n        return Animated.sequence([Animated.delay(delay), Animated.timing(animValue, {\n          toValue: 1,\n          duration: 400,\n          useNativeDriver: true\n        }), Animated.timing(animValue, {\n          toValue: 0.4,\n          duration: 400,\n          useNativeDriver: true\n        })]);\n      };\n      Animated.loop(Animated.parallel([createAnimation(dot1Anim, 0), createAnimation(dot2Anim, 200), createAnimation(dot3Anim, 400)])).start();\n    };\n    animateDots();\n  }, [dot1Anim, dot2Anim, dot3Anim]);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.messageRow,\n      children: [_jsx(View, {\n        style: [styles.avatar, {\n          backgroundColor: theme.bgPrimary,\n          borderColor: theme.borderLight\n        }],\n        children: _jsx(Text, {\n          style: [styles.avatarText, {\n            color: theme.accentPrimary\n          }],\n          children: \"T\"\n        })\n      }), _jsxs(View, {\n        style: [styles.typingBubble, {\n          backgroundColor: theme.bgPrimary,\n          borderColor: theme.borderLight\n        }],\n        children: [_jsx(Text, {\n          style: [styles.typingText, {\n            color: theme.textSecondary\n          }],\n          children: \"Talkie Gen is thinking\"\n        }), _jsxs(View, {\n          style: styles.dotsContainer,\n          children: [_jsx(Animated.View, {\n            style: [styles.dot, {\n              backgroundColor: theme.accentPrimary,\n              opacity: dot1Anim\n            }]\n          }), _jsx(Animated.View, {\n            style: [styles.dot, {\n              backgroundColor: theme.accentPrimary,\n              opacity: dot2Anim\n            }]\n          }), _jsx(Animated.View, {\n            style: [styles.dot, {\n              backgroundColor: theme.accentPrimary,\n              opacity: dot3Anim\n            }]\n          })]\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 8\n  },\n  messageRow: {\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    maxWidth: '85%'\n  },\n  avatar: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: 8,\n    borderWidth: 1\n  },\n  avatarText: {\n    fontSize: 14,\n    fontWeight: '700'\n  },\n  typingBubble: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    borderRadius: 16,\n    borderWidth: 1,\n    marginRight: 32\n  },\n  typingText: {\n    fontSize: 14,\n    fontWeight: '500',\n    marginRight: 12\n  },\n  dotsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  dot: {\n    width: 6,\n    height: 6,\n    borderRadius: 3,\n    marginHorizontal: 2\n  }\n});\nexport default TypingIndicator;","map":{"version":3,"names":["React","useEffect","useRef","View","Text","StyleSheet","Animated","useTheme","jsx","_jsx","jsxs","_jsxs","TypingIndicator","_useTheme","theme","dot1Anim","Value","current","dot2Anim","dot3Anim","animateDots","createAnimation","animValue","delay","sequence","timing","toValue","duration","useNativeDriver","loop","parallel","start","style","styles","container","children","messageRow","avatar","backgroundColor","bgPrimary","borderColor","borderLight","avatarText","color","accentPrimary","typingBubble","typingText","textSecondary","dotsContainer","dot","opacity","create","paddingHorizontal","paddingVertical","flexDirection","alignItems","maxWidth","width","height","borderRadius","justifyContent","marginRight","borderWidth","fontSize","fontWeight","marginHorizontal"],"sources":["/home/runner/work/app/app/src/components/TypingIndicator.js"],"sourcesContent":["import React, {useEffect, useRef} from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Animated,\n} from 'react-native';\n\nimport {useTheme} from '../context/ThemeContext';\n\nconst TypingIndicator = () => {\n  const {theme} = useTheme();\n  const dot1Anim = useRef(new Animated.Value(0.4)).current;\n  const dot2Anim = useRef(new Animated.Value(0.4)).current;\n  const dot3Anim = useRef(new Animated.Value(0.4)).current;\n\n  useEffect(() => {\n    const animateDots = () => {\n      const createAnimation = (animValue, delay) =>\n        Animated.sequence([\n          Animated.delay(delay),\n          Animated.timing(animValue, {\n            toValue: 1,\n            duration: 400,\n            useNativeDriver: true,\n          }),\n          Animated.timing(animValue, {\n            toValue: 0.4,\n            duration: 400,\n            useNativeDriver: true,\n          }),\n        ]);\n\n      Animated.loop(\n        Animated.parallel([\n          createAnimation(dot1Anim, 0),\n          createAnimation(dot2Anim, 200),\n          createAnimation(dot3Anim, 400),\n        ])\n      ).start();\n    };\n\n    animateDots();\n  }, [dot1Anim, dot2Anim, dot3Anim]);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.messageRow}>\n        {/* AI Avatar */}\n        <View style={[styles.avatar, {backgroundColor: theme.bgPrimary, borderColor: theme.borderLight}]}>\n          <Text style={[styles.avatarText, {color: theme.accentPrimary}]}>T</Text>\n        </View>\n\n        {/* Typing Bubble */}\n        <View style={[styles.typingBubble, {backgroundColor: theme.bgPrimary, borderColor: theme.borderLight}]}>\n          <Text style={[styles.typingText, {color: theme.textSecondary}]}>\n            Talkie Gen is thinking\n          </Text>\n          \n          <View style={styles.dotsContainer}>\n            <Animated.View\n              style={[\n                styles.dot,\n                {\n                  backgroundColor: theme.accentPrimary,\n                  opacity: dot1Anim,\n                },\n              ]}\n            />\n            <Animated.View\n              style={[\n                styles.dot,\n                {\n                  backgroundColor: theme.accentPrimary,\n                  opacity: dot2Anim,\n                },\n              ]}\n            />\n            <Animated.View\n              style={[\n                styles.dot,\n                {\n                  backgroundColor: theme.accentPrimary,\n                  opacity: dot3Anim,\n                },\n              ]}\n            />\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n  },\n  messageRow: {\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    maxWidth: '85%',\n  },\n  avatar: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: 8,\n    borderWidth: 1,\n  },\n  avatarText: {\n    fontSize: 14,\n    fontWeight: '700',\n  },\n  typingBubble: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    borderRadius: 16,\n    borderWidth: 1,\n    marginRight: 32,\n  },\n  typingText: {\n    fontSize: 14,\n    fontWeight: '500',\n    marginRight: 12,\n  },\n  dotsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  dot: {\n    width: 6,\n    height: 6,\n    borderRadius: 3,\n    marginHorizontal: 2,\n  },\n});\n\nexport default TypingIndicator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}